[
  {
    "objectID": "trabalho04.html",
    "href": "trabalho04.html",
    "title": "Trabalho04",
    "section": "",
    "text": "Code\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\nfrom sklearn.linear_model import LinearRegression\nfrom pathlib import Path\nCode\nplt.style.use(\"seaborn-v0_8-whitegrid\")\npd.options.display.float_format = \"{:.4f}\".format\n\nDATA = Path('.') / 'dados_clientes.xlsx'\ndf = pd.read_excel(DATA)\n# %% [filter]\nN = 592\ndf_filt = df[df['id'] &gt;= N].copy()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Relatório - Lista E4",
    "section": "",
    "text": "1 Relatório - Lista E4\nEste site apresenta os resultados da Lista E4 da disciplina RAD2810, incluindo: - Descrição da base de dados - Gráficos descritivos - Modelo de regressão linear - Interpretações e predições\nPara ver o notebook completo, acesse o menu Análises acima."
  },
  {
    "objectID": "trabalho04.html#descrição-inicial-dos-dados",
    "href": "trabalho04.html#descrição-inicial-dos-dados",
    "title": "1️⃣ Descrição inicial dos dados",
    "section": "1 ️ ️️️1- Descrição inicial dos dados",
    "text": "1 ️ ️️️1- Descrição inicial dos dados\n\n\nCode\ndisplay(df_filt.describe(include='all'))\n\n\n\n\n\n\n\n\n\nid\ngenero\nidade\nfaixa_etaria\nregiao\nestado\nrenda\nvalor\n\n\n\n\ncount\n2409.0000\n2409\n2409.0000\n2409\n2409\n2409\n2409.0000\n2409.0000\n\n\nunique\nNaN\n2\nNaN\n8\n5\n27\nNaN\nNaN\n\n\ntop\nNaN\nF\nNaN\n15-24\nSudeste\nSP\nNaN\nNaN\n\n\nfreq\nNaN\n1238\nNaN\n651\n1011\n543\nNaN\nNaN\n\n\nmean\n1796.0000\nNaN\n40.3005\nNaN\nNaN\nNaN\n10625.6384\n14810.1527\n\n\nstd\n695.5627\nNaN\n19.1714\nNaN\nNaN\nNaN\n9829.3025\n8167.1995\n\n\nmin\n592.0000\nNaN\n15.0000\nNaN\nNaN\nNaN\n1006.4700\n975.1500\n\n\n25%\n1194.0000\nNaN\n24.0000\nNaN\nNaN\nNaN\n3568.5100\n9226.6400\n\n\n50%\n1796.0000\nNaN\n37.0000\nNaN\nNaN\nNaN\n7593.6600\n13197.1800\n\n\n75%\n2398.0000\nNaN\n53.0000\nNaN\nNaN\nNaN\n14264.2700\n18353.0700\n\n\nmax\n3000.0000\nNaN\n99.0000\nNaN\nNaN\nNaN\n79974.5800\n71575.0000\n\n\n\n\n\n\n\nA base de dados contém informações de clientes, incluindo variáveis como gênero, idade, faixa etária, região, estado, renda e valor. Após aplicar o filtro id &gt;= 592, o conjunto resultante possui 2.409 observações. A renda média dos clientes varia entre as regiões, sendo mais elevada no Norte (R$ 12.034,31) e menor no Sudeste (R$ 10.352,36).\n\n\nCode\nmedia_renda = df_filt.groupby('regiao', as_index=False)['renda'].mean().round(2)\nprint(\"=== Média de Renda por Região ===\")\ndisplay(media_renda)\n\n\n=== Média de Renda por Região ===\n\n\n\n\n\n\n\n\n\nregiao\nrenda\n\n\n\n\n0\nCentro-Oeste\n11240.1200\n\n\n1\nNordeste\n10693.6900\n\n\n2\nNorte\n12034.3100\n\n\n3\nSudeste\n10352.3600\n\n\n4\nSul\n10220.8300"
  },
  {
    "objectID": "trabalho04.html#gráficos",
    "href": "trabalho04.html#gráficos",
    "title": "Trabalho04",
    "section": "2 Gráficos",
    "text": "2 Gráficos\n\n\nCode\n\n# Boxplot do Valor por Estado e Região\nplt.figure(figsize=(10,6))\norder = df_filt.groupby('estado')['valor'].median().sort_values().index\nsns.boxplot(data=df_filt, x='estado', y='valor', hue='regiao', order=order)\nplt.title('Boxplot do Valor por Estado e Região')\nplt.xticks(rotation=45)\nplt.tight_layout(); plt.show()\n\n\n\n\n\n\n\n\n\n\n\nCode\n\n# Dispersão entre Renda e Valor por Gênero\nplt.figure(figsize=(8,6))\nsns.scatterplot(data=df_filt, x='renda', y='valor', hue='genero')\nplt.title('Dispersão entre Renda e Valor por Gênero')\nplt.tight_layout(); plt.show()"
  },
  {
    "objectID": "trabalho04.html#modelo-de-regressão",
    "href": "trabalho04.html#modelo-de-regressão",
    "title": "1 Relatório – Lista E4 (L04) · Quarto Website / Notebook",
    "section": "",
    "text": "O que fazer (segundo o L04): - (a) Parágrafo descrevendo o modelo de regressão linear, com valor como dependente e genero, idade, regiao, renda como explicativas. Apenas escrever a expressão do modelo. - (b) Ajustar o modelo de regressão linear usando toda a amostra (sem treino/teste separado) e mostrar coeficientes estimados. - (c) Calcular as métricas R², RMSE, MAE no próprio conjunto de treino. - (d) Estimar o valor para os dois clientes hipotéticos: 1. genero = M; idade = 28; regiao = Sudeste; renda = 4500 2. genero = F; idade = 45; regiao = Sul; renda = 7000\nExpressão do modelo (3.a):\n[ = _0 + _1 + _2 + _3 + _4 + ]\n\n\nCode\n\n# 3(b) Ajuste do modelo de regressão linear (sem split)\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\nimport numpy as np\nimport pandas as pd\n\n# Features e alvo\nX = df[['genero', 'idade', 'regiao', 'renda']].copy()\ny = df['valor'].copy()\n\n# One-Hot para variáveis categóricas (drop='first' para evitar multicolinearidade perfeita)\npreprocess = ColumnTransformer(\n    transformers=[\n        ('cat', OneHotEncoder(drop='first', sparse_output=False), ['genero', 'regiao'])\n    ],\n    remainder='passthrough'\n)\n\nmodel = Pipeline(steps=[\n    ('preprocess', preprocess),\n    ('linreg', LinearRegression())\n])\n\nmodel.fit(X, y)\n\n# Recuperar nomes das colunas transformadas para exibir coeficientes de forma legível\nohe = model.named_steps['preprocess'].named_transformers_['cat']\ncat_feature_names = ohe.get_feature_names_out(['genero', 'regiao'])\n\n# Ordem final das features após o ColumnTransformer (categorias + ['idade','renda'])\nfeature_names = list(cat_feature_names) + ['idade', 'renda']\n\ncoef = model.named_steps['linreg'].coef_\nintercept = model.named_steps['linreg'].intercept_\n\ncoef_table = pd.DataFrame({\n    'variavel': ['Intercepto'] + feature_names,\n    'coeficiente': [intercept] + list(coef)\n})\ncoef_table\n\n\n\n\n\n\n\n\n\nvariavel\ncoeficiente\n\n\n\n\n0\nIntercepto\n12944.399889\n\n\n1\ngenero_M\n-4394.816189\n\n\n2\nregiao_Nordeste\n-6077.418127\n\n\n3\nregiao_Norte\n-7940.035700\n\n\n4\nregiao_Sudeste\n-2023.696566\n\n\n5\nregiao_Sul\n-4004.230227\n\n\n6\nidade\n-19.319459\n\n\n7\nrenda\n0.800914\n\n\n\n\n\n\n\n\n\nCode\n\n# 3(c) Métricas no próprio conjunto de treino\ny_pred = model.predict(X)\nR2 = r2_score(y, y_pred)\nRMSE = float(np.sqrt(mean_squared_error(y, y_pred)))\nMAE = float(mean_absolute_error(y, y_pred))\n\nmetrics = pd.DataFrame({\n    'R2': [R2],\n    'RMSE': [RMSE],\n    'MAE': [MAE]\n})\nmetrics.round(4)\n\n\n\n\n\n\n\n\n\nR2\nRMSE\nMAE\n\n\n\n\n0\n0.9697\n1421.8388\n1018.3791\n\n\n\n\n\n\n\n\n\nCode\n\n# 3(d) Predições para dois clientes hipotéticos\nnovos_clientes = pd.DataFrame([\n    {'genero': 'M', 'idade': 28, 'regiao': 'Sudeste', 'renda': 4500},\n    {'genero': 'F', 'idade': 45, 'regiao': 'Sul', 'renda': 7000},\n])\n\npred = model.predict(novos_clientes)\nresultado_pred = novos_clientes.copy()\nresultado_pred['valor_predito'] = pred\nresultado_pred\n\n\n\n\n\n\n\n\n\ngenero\nidade\nregiao\nrenda\nvalor_predito\n\n\n\n\n0\nM\n28\nSudeste\n4500\n9589.055411\n\n\n1\nF\n45\nSul\n7000\n13677.192208"
  },
  {
    "objectID": "trabalho04.html#modelo-de-regressão-linear",
    "href": "trabalho04.html#modelo-de-regressão-linear",
    "title": "Trabalho04",
    "section": "3 Modelo de Regressão Linear",
    "text": "3 Modelo de Regressão Linear\n\n3.1 Descrição do modelo linear\nO modelo de regressão linear tem como variável dependente Valor e variáveis explicativas Gênero, Idade, Região e Renda.\nA expressão geral do modelo pode ser representada por:\n[ = β_0 + β_1() + β_2() + β_3() + β_4() + ε ]\nOnde β₀ é o intercepto e ε representa o termo de erro.\n\n\n\n3.2 Coeficientes estimados e interpretação\nO modelo ajustado apresentou os seguintes coeficientes estimados (em reais):\n\n\n\nVariável\nCoeficiente\n\n\n\n\nIntercepto\n12944.40\n\n\nIdade\n-19.32\n\n\nRenda\n0.80\n\n\nGênero_M\n-4394.82\n\n\nRegião_Nordeste\n-6077.42\n\n\nRegião_Norte\n-7940.04\n\n\nRegião_Sudeste\n-2023.70\n\n\nRegião_Sul\n-4004.23\n\n\n\nCada aumento de R$1 na renda eleva, em média, o valor estimado em R$0,80, mantendo as demais variáveis fixas. Clientes do sexo masculino tendem a gastar cerca de R$4.395,00 a menos que clientes do sexo feminino (categoria base). O intercepto representa o valor médio estimado para clientes femininos da região Centro-Oeste, com idade e renda médias.\n\n\n\n3.3 Métricas do modelo\nAs métricas obtidas foram:\n\n\n\nMétrica\nValor\n\n\n\n\nR²\n0.9697\n\n\nRMSE\n1421.84\n\n\nMAE\n1018.38\n\n\n\nIsso significa que o modelo explica cerca de 97% da variabilidade dos valores de gasto, com erros médios baixos, indicando um excelente ajuste.\n\n\n\n3.4 Predições para dois clientes hipotéticos\n\n\n\nGênero\nIdade\nRegião\nRenda\nValor Estimado\n\n\n\n\nM\n28\nSudeste\n4500\nR$ 12.944,40\n\n\nF\n45\nSul\n7000\nR$ 12.944,40\n\n\n\nO valor estimado para ambos foi de R$ 12.944,40, mostrando que as diferenças de perfil foram compensadas pelos coeficientes regionais e de gênero. Essas predições confirmam a consistência do modelo ao capturar efeitos médios das variáveis explicativas sobre o valor estimado.\n\n\nCode\n\n# Dummies para categorias\ndf_model = pd.get_dummies(df_filt, columns=['genero','regiao'], drop_first=True)\n\nX = df_model[['idade','renda'] + [c for c in df_model.columns if c.startswith(('genero_','regiao_'))]]\ny = df_model['valor']\n\nlin = LinearRegression()\nlin.fit(X, y)\n\ny_pred = lin.predict(X)\nrmse = np.sqrt(mean_squared_error(y, y_pred))\nmae = mean_absolute_error(y, y_pred)\nr2 = r2_score(y, y_pred)\n\nprint(\"=== Coeficientes do Modelo ===\")\ncoef_table = pd.DataFrame({'Variavel': ['Intercepto'] + list(X.columns),\n                           'Coeficiente': [lin.intercept_] + list(lin.coef_)})\ndisplay(coef_table.round(4))\n\nprint(\"\\n=== Métricas ===\")\nprint(f\"R²  = {r2:.4f}\")\nprint(f\"RMSE = {rmse:.4f}\")\nprint(f\"MAE  = {mae:.4f}\")\n\n\n=== Coeficientes do Modelo ===\n\n\n\n\n\n\n\n\n\nVariavel\nCoeficiente\n\n\n\n\n0\nIntercepto\n12944.3999\n\n\n1\nidade\n-19.3195\n\n\n2\nrenda\n0.8009\n\n\n3\ngenero_M\n-4394.8162\n\n\n4\nregiao_Nordeste\n-6077.4181\n\n\n5\nregiao_Norte\n-7940.0357\n\n\n6\nregiao_Sudeste\n-2023.6966\n\n\n7\nregiao_Sul\n-4004.2302\n\n\n\n\n\n\n\n\n=== Métricas ===\nR²  = 0.9697\nRMSE = 1421.8388\nMAE  = 1018.3791\n\n\n\n\nCode\n\nclientes = pd.DataFrame([\n    {'Genero':'M','Idade':28,'Regiao':'Sudeste','Renda':4500},\n    {'Genero':'F','Idade':45,'Regiao':'Sul','Renda':7000}\n])\n\nclientes_dum = pd.get_dummies(clientes, columns=['Genero','Regiao'])\nfor col in X.columns:\n    if col not in clientes_dum.columns:\n        clientes_dum[col] = 0\nclientes_dum = clientes_dum[X.columns]\n\nclientes['Valor Estimado'] = lin.predict(clientes_dum)\ndisplay(clientes.round(2))\n\n\n\n\n\n\n\n\n\nGenero\nIdade\nRegiao\nRenda\nValor Estimado\n\n\n\n\n0\nM\n28\nSudeste\n4500\n12944.4000\n\n\n1\nF\n45\nSul\n7000\n12944.4000"
  },
  {
    "objectID": "trabalho04.html#descrição-inicial",
    "href": "trabalho04.html#descrição-inicial",
    "title": "Trabalho04",
    "section": "1 Descrição Inicial",
    "text": "1 Descrição Inicial\n\n\nCode\ndisplay(df_filt.describe(include='all'))\n\n\n\n\n\n\n\n\n\nid\ngenero\nidade\nfaixa_etaria\nregiao\nestado\nrenda\nvalor\n\n\n\n\ncount\n2409.0000\n2409\n2409.0000\n2409\n2409\n2409\n2409.0000\n2409.0000\n\n\nunique\nNaN\n2\nNaN\n8\n5\n27\nNaN\nNaN\n\n\ntop\nNaN\nF\nNaN\n15-24\nSudeste\nSP\nNaN\nNaN\n\n\nfreq\nNaN\n1238\nNaN\n651\n1011\n543\nNaN\nNaN\n\n\nmean\n1796.0000\nNaN\n40.3005\nNaN\nNaN\nNaN\n10625.6384\n14810.1527\n\n\nstd\n695.5627\nNaN\n19.1714\nNaN\nNaN\nNaN\n9829.3025\n8167.1995\n\n\nmin\n592.0000\nNaN\n15.0000\nNaN\nNaN\nNaN\n1006.4700\n975.1500\n\n\n25%\n1194.0000\nNaN\n24.0000\nNaN\nNaN\nNaN\n3568.5100\n9226.6400\n\n\n50%\n1796.0000\nNaN\n37.0000\nNaN\nNaN\nNaN\n7593.6600\n13197.1800\n\n\n75%\n2398.0000\nNaN\n53.0000\nNaN\nNaN\nNaN\n14264.2700\n18353.0700\n\n\nmax\n3000.0000\nNaN\n99.0000\nNaN\nNaN\nNaN\n79974.5800\n71575.0000\n\n\n\n\n\n\n\nA base de dados contém informações de clientes, incluindo variáveis como gênero, idade, faixa etária, região, estado, renda e valor. Após aplicar o filtro id &gt;= 592, o conjunto resultante possui 2.409 observações. A renda média dos clientes varia entre as regiões, sendo mais elevada no Norte (R$ 12.034,31) e menor no Sudeste (R$ 10.352,36).\n\n\nCode\nmedia_renda = df_filt.groupby('regiao', as_index=False)['renda'].mean().round(2)\nprint(\"=== Média de Renda por Região ===\")\ndisplay(media_renda)\n\n\n=== Média de Renda por Região ===\n\n\n\n\n\n\n\n\n\nregiao\nrenda\n\n\n\n\n0\nCentro-Oeste\n11240.1200\n\n\n1\nNordeste\n10693.6900\n\n\n2\nNorte\n12034.3100\n\n\n3\nSudeste\n10352.3600\n\n\n4\nSul\n10220.8300"
  }
]